type Env = [Map String Int]

push_scope : State Env
push_scope = do
  env <- get
  put (Map.empty : env)

pop_scope : State Env
pop_scope = do
  env :: rest <- get
  put rest

// algebraic effects
lookup : String -> (State Env, Error String)
lookup name = do
  env <- get
  match Map.lookup name env with
    Just value -> pure value
    None -> error ("unbound variable: " ++ name)

insert : String -> Int -> State Env
insert name value = do
  env :: rest <- get
  put (Map.insert name value env :: rest)



